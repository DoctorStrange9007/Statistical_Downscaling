output_dir: 'src/generation/output/'
option: 'unconditional'
rng_key: 888
epsilon: 1e-10
general:
  data_file_name: 'data/ks_trajectories_512.h5'
  d: 192 #3 for easy example 
  d_prime: 48
  batch_size: 512 #32 for runthrough
  total_train_steps: 50 #1_000_000  for runthrough
  eval_every_steps: 10 #100 for runthrough
  metric_aggregation_steps: 10 #100 for runthrough
  save_interval_steps: 10 #100  for runthrough
  num_batches_per_eval: 1 #10  for runthrough #not defined specifically in the paper
  max_to_keep: 1
  T: 1
  beta_min: 0.1
  beta_max: 20 
  norm_guide_strength: 1.0
  ema_decay: 0.95
  clip_min: 1e-3 
UNET:
  out_channels: 1
  num_channels: 32,64,128
  downsample_ratio: 2,2,2
  num_blocks: 6
  noise_embed_dim: 128
  use_attention: True
  num_heads: 8
  use_position_encoding: False
  dropout_rate: 0.0
optimizer:
  init_value: 0.0
  peak_value: 1e-3
  warmup_steps: 1_000
  decay_steps: 990_000
  end_value: 1e-6
  clip_norm: 1.0
exp_tspan:
  num_steps: 256
  end_sigma: 1e-2 #not defined specifically in the paper
pde_solver:
  t_low: 1e-10
  nSim_interior: 2000
  nSim_terminal: 2000 #50000
  x_low: 2.0 #change to fit data range
  x_high: 8.0
  sampling_stages: 3 #1500 
  steps_per_sample: 1 #100 DOES THIS ADD VALUE? HOW MUCH? 
  learning_rate: sirignano #set to specific value for fixed learning rate
  boundaries: [250] #[500, 1000, 2000, 3000, 4000, 4500]
  lambda: 0.65
  num_gen_samples: 10
  num_models: 2 # aka num_conditions 512
DGM:
  nodes_per_layer: 50
  num_layers: 3
  N_epochs: 1_250
easy_examples:
  n_samples_train: 38_400
  n_samples_generate: 20_000
  dt: 0.0001










